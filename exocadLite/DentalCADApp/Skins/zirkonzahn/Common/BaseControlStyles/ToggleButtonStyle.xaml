<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="..\Brushes\Colors.xaml"/>
   </ResourceDictionary.MergedDictionaries>

    <!-- ===============================-->
    <!--   Default ToggleButton Style   -->
    <!-- ===============================-->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFontFamily}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">                        
					<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<Border Name="OuterBorder" BorderBrush="{DynamicResource BrandBrush2BorderMouseOver}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>                                                                           
                        
						<Trigger Property="IsMouseOver" Value="true">                          
                        </Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="False" />
							</MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>  
						</MultiTrigger>
                        
						<Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}" />
                        </Trigger>
						<Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0" />
                        </Trigger>
						
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>