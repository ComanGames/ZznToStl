<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:guiHelper="clr-namespace:DentalGUIHelper;assembly=DentalConfig"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../Brushes/Common.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

  <ControlTemplate x:Key="AttachedButtonTemplate" TargetType="{x:Type ButtonBase}">
    <Grid Background="{TemplateBinding Background}">
      <!-- Content, e.g. Icon -->
      <Rectangle x:Name="rectangle" Fill="{TemplateBinding Foreground}">
        <Rectangle.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <ContentPresenter x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

            </VisualBrush.Visual>
          </VisualBrush>
        </Rectangle.OpacityMask>
      </Rectangle>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter TargetName="contentPresenter"
                Property="Opacity"
                Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="False">
        <Setter TargetName="contentPresenter"
                Property="Opacity"
                Value=".5" />
      </Trigger>
      <Trigger Property="IsEnabled"
               Value="false">
        <Setter Property="Foreground"
                Value="#ADADAD" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="AttachedButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background"
            Value="{DynamicResource TransparentWhiteBrush}" />
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="Padding"
            Value="1" />
    <Setter Property="Template"
            Value="{StaticResource AttachedButtonTemplate}" />
  </Style>

  <Style TargetType="{x:Type TextBox}">
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="FontFamily" Value="Arial"/>
    <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
    <Setter Property="Background" Value="{StaticResource TextBoxOuterBackground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxOuterBorder}"/>
    <Setter Property="SelectionBrush" Value="{StaticResource BrandBrush2}"/>
    <Setter Property="SelectionOpacity" Value="0.6"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Margin" Value="3"/>
    <Setter Property="Height" Value="20"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel >
            <AdornedElementPlaceholder>
              <Border BorderBrush="Red" BorderThickness="2"/>
            </AdornedElementPlaceholder>
            <TextBlock Margin="3" Text="*" Foreground="Red" ToolTip="{Binding Path=AdornedElement.ToolTip, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Adorner}}}"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2"
                               To=".2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>

            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2"
                               From=".2"
                               To="0"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
          </ControlTemplate.Resources>

          <Border x:Name="OuterBorder" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border x:Name="InnerBorder" SnapsToDevicePixels="true" BorderBrush="{StaticResource TextBoxInnerBorder}" Background="{StaticResource TextBoxInnerBackground}" BorderThickness="0">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                <TextBlock x:Name="Message" Grid.Column="0" Text="{TemplateBinding guiHelper:TextboxHelper.Watermark}"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False" Opacity="0.6" Visibility="Collapsed"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="6,2,6,2" />
                <Button Grid.Column="1" x:Name="PART_ClearText" Style="{StaticResource AttachedButtonStyle}" Foreground="{TemplateBinding Foreground}"
                         HorizontalAlignment="Right"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(guiHelper:TextboxHelper.ClearTextButton), Converter={StaticResource BooleanToVisibilityConverter}}"
                        IsTabStop="False" Width="16" Height="16" Margin="0 0 3 0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                  <Image x:Name="ClearTextbox" Width="10" Height="10" Stretch="Uniform"/>
                </Button>

              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="guiHelper:TextboxHelper.HasText" Value="False" />
                <Condition Property="IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="guiHelper:TextboxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
              </Trigger.ExitActions>
            </Trigger>
            
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(guiHelper:TextboxHelper.ClearTextButton)}"
                         Value="False">
              <Setter TargetName="PART_ContentHost"
                      Property="Grid.ColumnSpan"
                      Value="2" />
              <Setter TargetName="Message"
                      Property="Grid.ColumnSpan"
                      Value="2" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{StaticResource HoverTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource HoverTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource HoverTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HoverTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
              <Setter Property="Background" Value="{StaticResource FocusedTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource FocusedTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource FocusedTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource FocusedTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource FocusedTextBoxForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{StaticResource DisabledTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource DisabledTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource DisabledTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
              <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type PasswordBox}">
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="FontFamily" Value="Arial"/>
    <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
    <Setter Property="Background" Value="{StaticResource TextBoxOuterBackground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxOuterBorder}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Margin" Value="3"/>
    <Setter Property="Height" Value="20"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2"
                               To=".2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>

            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2"
                               From=".2"
                               To="0"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2"
                               Storyboard.TargetProperty="Opacity"
                               Storyboard.TargetName="Message" />
            </Storyboard>
          </ControlTemplate.Resources>

          <Border x:Name="OuterBorder" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border x:Name="InnerBorder" SnapsToDevicePixels="true" BorderBrush="{StaticResource TextBoxInnerBorder}" Background="{StaticResource TextBoxInnerBackground}" BorderThickness="0">
              <Grid>
                <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                <TextBlock x:Name="Message"
                           Text="{TemplateBinding guiHelper:TextboxHelper.Watermark}"
                           Foreground="{TemplateBinding Foreground}"
                           IsHitTestVisible="False"
                           Opacity="0.6"
                           HorizontalAlignment="Left"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Margin="6,2,6,2" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="guiHelper:TextboxHelper.HasText" Value="False" />
                <Condition Property="IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="guiHelper:TextboxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{StaticResource HoverTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource HoverTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource HoverTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HoverTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
              <Setter Property="Background" Value="{StaticResource FocusedTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource FocusedTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource FocusedTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource FocusedTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource FocusedTextBoxForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{StaticResource DisabledTextBoxOuterBackground}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledTextBoxOuterBorder}"/>
              <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource DisabledTextBoxInnerBackground}"/>
              <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource DisabledTextBoxInnerBorder}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>