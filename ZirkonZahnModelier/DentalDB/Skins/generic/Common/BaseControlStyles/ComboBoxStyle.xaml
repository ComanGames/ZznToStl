<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="18" />
		<Setter Property="MinHeight" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid>
                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" />
                                                <Border x:Name="MouseOverBorder" Background="{DynamicResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
                                                <Border x:Name="PressedBorder" Background="{DynamicResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
                                                <Rectangle x:Name="FocusRectangle" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" Opacity="0" />
                                                <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" />
                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Stroke="{DynamicResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed" />
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  IsHitTestVisible="false"
                                                                  Margin="{TemplateBinding Padding}"																		  
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
						<!-- Padding - margin-Hack is to have the width of the Popup correctly -->
                        <Border x:Name="ContentPresenterBorder" Padding="0,0,1,0" Margin="0,0,-1,0">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"                                              
											  Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Right"
                                              Margin="0"
                                              Style="{DynamicResource comboToggleStyle}"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="Stretch"
											  VerticalContentAlignment="Stretch"
                                              KeyboardNavigation.IsTabStop="False">											  
									<Border x:Name="DropDownToggleButton" HorizontalAlignment="Right" Width="18" VerticalAlignment="Stretch" Margin="0" Background="{DynamicResource ButtonBrush}" >
										<Path x:Name="BtnArrow"
											  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Height="4"
											  Margin="0,0,0,0"
											  Stretch="Uniform"
											  Fill="{TemplateBinding Foreground}"
											  Width="8">                                        
										</Path>
									</Border>
                                </ToggleButton>

                                <Border x:Name="EditableTextBoxBorder"
                                            Visibility="Collapsed"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,1,0,1"
                                            Background="{Binding Path=Background, ElementName=PART_EditableTextBox}"
                                            HorizontalAlignment="Stretch"
                                            Margin="0,0,18,0"
                                            VerticalAlignment="Stretch">
                                    <TextBox    x:Name="PART_EditableTextBox"
                                                    HorizontalAlignment="Stretch" 
                                                    Margin="0" 
													BorderThickness="0"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                    VerticalAlignment="Stretch"
                                                    Focusable="True"
                                                    
                                                   >
												   <TextBox.Style>
                                                      <Style TargetType="TextBox">
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}"/>
                                                        <Setter Property="Background" Value="{DynamicResource TextBoxOuterBackground}"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxOuterBorder}"/>
                                                        <Setter Property="SelectionBrush" Value="{DynamicResource BrandBrush2}"/>
                                                        <Setter Property="SelectionOpacity" Value="0.6"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

                                                        <Setter Property="Control.Template">
                                                          <Setter.Value>
                                                            <ControlTemplate TargetType="TextBox">
                                                              <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" />
                                                            </ControlTemplate>
                                                          </Setter.Value>
                                                        </Setter>
                                                      </Style>
                                                    </TextBox.Style>
                                   </TextBox>
												   
                                </Border>
                                <Grid Margin="5 0 19 0">
                                    <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusRectangle" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource DisabledWhiteColorBrush}" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="{DynamicResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{DynamicResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{DynamicResource ValidationBrush5}" Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{DynamicResource WhiteColorBrush}" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
							   Width="{Binding ActualWidth, ElementName=ContentPresenterBorder}"
                               MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"							   
							   VerticalOffset="1"							   
							   HorizontalOffset="0"
                               Placement="Bottom">
                            <Border x:Name="PopupBorder" Margin="0,0,0,0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalAlignment="Stretch"
                                    Height="Auto"
                                    BorderBrush="{DynamicResource ComboBoxPopupBrush}"
                                    Background="{DynamicResource BlackColorBrush}">
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="0" Padding="0">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="3,0,0,0"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="EditableTextBoxBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DropDownToggle" Property="Focusable" Value="False"/>
                            <Setter TargetName="DropDownToggle" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="DropDownToggle" Property="Background" Value="Transparent" />                                                        
                        </Trigger>
						<Trigger Property="IsDropDownOpen" Value="True">
							<Setter Property="BorderThickness" Value="1" />
							<Setter Property="Background" Value="{DynamicResource BlackColorBrush}" />
							<Setter TargetName="DropDownToggleButton" Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}" />
							<Setter TargetName="DropDownToggleButton" Property="BorderThickness" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledTextBoxOuterBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	
	<Style TargetType="ComboBoxItem" >
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />		
        <Setter Property="BorderThickness" Value="0" />        
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />		
		<Setter Property="Margin" Value="0,1,0,1" />        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0">
                        <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource BrandBrush1}" />
                        <Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource GrayBrush5}" />
                        <ContentControl Foreground="{TemplateBinding Foreground}" ToolTip="{Binding Path=Content, ElementName=contentPresenter}">
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="SelectedRectangle" Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="MouseOverRectangle" Value="1"/>
							<Setter Property="TextElement.Foreground" Value="{DynamicResource BlackBrush}"/>	
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!-- Helper-style for comboboxitems that contain something other than text -->
    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemNoToolTip" >
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />		
        <Setter Property="BorderThickness" Value="0" />        
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />		
		<Setter Property="Margin" Value="0,1,0,1" />        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0">
                        <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource BrandBrush1}" />
                        <Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource GrayBrush5}" />
                        <ContentControl Foreground="{TemplateBinding Foreground}" >
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="SelectedRectangle" Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="MouseOverRectangle" Value="1"/>
							<Setter Property="TextElement.Foreground" Value="{DynamicResource BlackBrush}"/>	
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>