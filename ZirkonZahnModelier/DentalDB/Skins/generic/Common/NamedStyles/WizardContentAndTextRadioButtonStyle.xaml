<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DentalGUIHelper;assembly=DentalConfig">

    <!-- ========================= -->
    <!--        Converters         -->
    <!-- ========================= -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <Style x:Key="WizardContentAndTextRadioButtonStyle" TargetType="{x:Type local:ContentAndTextRadioButton}">
        <Setter Property="Background" Value="{DynamicResource ButtonBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />        
		<Setter Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="TextDock" Value="Right" />
        <Setter Property="TextMargin" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="ContentWidth" Value="Auto" />
        <Setter Property="ContentHeight" Value="Auto" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ContentAndTextRadioButton}">
					<Grid>    
						<DockPanel Name="contentContainer" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<!-- Content (= Image) with circle around it -->
							<Grid x:Name="grid" Background="{TemplateBinding Background}" Margin="3" DockPanel.Dock="Left">
								<Viewbox Width="{TemplateBinding ContentWidth}" Height="{TemplateBinding ContentHeight}" Margin="4,4">
									
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Viewbox>
							</Grid>

							<!-- Text -->
							<TextBlock x:Name="PART_TextBlock" Text="{TemplateBinding Text}" Foreground="{TemplateBinding Foreground}"
									   Margin="{TemplateBinding TextMargin}" TextWrapping="WrapWithOverflow"
									   Visibility="{TemplateBinding ShowText, Converter={StaticResource BooleanToVisibilityConverter}}"
									   HorizontalAlignment="Left" VerticalAlignment="Center" />
						</DockPanel>
						<Border Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" />
					</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextDock" Value="Right">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Left">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Top">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Bottom">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Top" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>