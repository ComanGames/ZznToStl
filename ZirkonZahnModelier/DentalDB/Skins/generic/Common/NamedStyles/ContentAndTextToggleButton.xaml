<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DentalGUIHelper;assembly=DentalConfig">

    <!-- ========================= -->
    <!--        Converters         -->
    <!-- ========================= -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <SolidColorBrush x:Key="ContentAndTextButtonDescriptionTextBrush">#FF7E7E7E</SolidColorBrush>

    <!-- ============================== -->
    <!--   ContentAndTextButton Style   -->
    <!-- ============================== -->
    <Style x:Key="ImageAndTextToggleButtonBase" TargetType="{x:Type local:ImageAndTextToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ButtonBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />		
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="TextDock" Value="Right" />
        <Setter Property="TextMargin" Value="5,2,5,2" />
        <Setter Property="ContentWidth" Value="18" />
        <Setter Property="ContentHeight" Value="18" />     
		<Setter Property="Padding" Value="7,7,2,7" />     
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageAndTextToggleButton}">
					<Grid>
                    <DockPanel Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <!-- Content (= Image) -->
                        <Grid x:Name="grid"  Margin="{TemplateBinding Padding}" DockPanel.Dock="Left" 
                              Visibility="{TemplateBinding ShowContent, Converter={StaticResource BooleanToVisibilityConverter}}">
                            
									<!-- Content, e.g. Icon -->
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														Width="{TemplateBinding ContentWidth}" Height="{TemplateBinding ContentHeight}"
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"	UseLayoutRounding="true"
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>                            
                        </Grid>

                        <!-- Text -->
                        <Grid Name="textContainer"  VerticalAlignment="Center" Margin="{TemplateBinding TextMargin}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="PART_TextBlockMain" Text="{TemplateBinding Text}" Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}" FontFamily="{DynamicResource ButtonFontFamily}"
                                    TextWrapping="WrapWithOverflow"
                                   Visibility="{TemplateBinding ShowText, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" />                            

                        </Grid>
                    </DockPanel>
					<Border Name="OuterBorder" BorderBrush="{DynamicResource BrandBrush2BorderMouseOver}" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" />
					</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextDock" Value="Right">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="textContainer" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Left">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="textContainer" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Top">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="textContainer" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="TextDock" Value="Bottom">
                            <Setter TargetName="grid" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="textContainer" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
						 <MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="False" />
							</MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>  
						</MultiTrigger>
						<Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">                           
							<Setter TargetName="OuterBorder" Property="Opacity" Value="1" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource BrandBrush2Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type local:ImageAndTextToggleButton}" BasedOn="{StaticResource ImageAndTextToggleButtonBase}" />

</ResourceDictionary>