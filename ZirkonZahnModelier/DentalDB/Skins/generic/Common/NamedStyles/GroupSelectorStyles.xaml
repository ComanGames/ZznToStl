<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:WpfApplication">
    <BooleanToVisibilityConverter x:Key="BoolConverter"/>

  <Style x:Key="GroupBoxTreeViewItem" TargetType="{x:Type TreeViewItem}">

    <Setter Property="FocusVisualStyle"
            Value="{DynamicResource TreeViewItemFocusVisual}" />
        <Setter Property="Visibility" Value="{Binding HasChildren, Converter={StaticResource BoolConverter}}"/>
    <Setter Property="IsExpanded" Value="True" />
    <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=OneTime}" />
    <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
    <!--<Setter Property="Background" Value="{Binding ., Converter={StaticResource testBackground}}"/>-->
    <Setter Property="Foreground" Value="{DynamicResource GrayBrush13}"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>


    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <StackPanel>
            <Border x:Name="Border"  SnapsToDevicePixels="true" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    MinHeight="{TemplateBinding MinHeight}">
              <Grid VerticalAlignment="Stretch">

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="19" />
				  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
				                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander"
                              Style="{DynamicResource ExpandCollapseToggleStyle}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                              ClickMode="Press" >

                </ToggleButton>
                        <Border SnapsToDevicePixels="true" x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4"/>
								  
								                     </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
              </Grid>
            </Border>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>

            <!--<Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
            </Trigger>-->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush13}" />
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush13}" />
              </MultiTrigger.Setters>
            </MultiTrigger>            
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <!-- <Setter Property="Background" Value="{Binding ., Converter={StaticResource testBackground}, ConverterParameter=doLighten}"/>-->
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
